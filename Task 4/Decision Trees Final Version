import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Example data
data = {
    'truck_id': [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3],
    'truck_color': ['Red', 'Green', 'Blue', 'Green', 'Red', 'Blue', 'Blue', 'Green', 'Red', 'Red', 'Green', 'Blue', 'Blue', 'Green', 'Red','Red', 'Green', 'Blue', 'Green', 'Red', 'Blue', 'Blue', 'Green', 'Red', 'Red', 'Green', 'Blue', 'Blue', 'Green', 'Red'],
    'truck_height': [15, 10, 12, 15, 8, 8, 12, 11, 9, 13, 10, 9, 12, 9, 10, 15, 10, 12, 15, 8, 8, 12, 11, 9, 13, 10, 9, 12, 9, 10],
    'truck_width': [10, 8, 9, 10, 8, 10, 12, 11, 11, 10, 9, 10, 12, 10, 11, 10, 8, 9, 10, 8, 10, 12, 11, 11, 10, 9, 10, 12, 10, 11],
    'distance_of_route':[250, 150, 200, 200, 100, 150, 150, 100, 50, 300, 100, 50, 250, 200, 200, 250, 150, 200, 200, 100, 150, 150, 100, 50, 300, 100, 50, 250, 200, 200],
    'max_match_of_route':[200, 150, 50, 150, 100, 150, 150, 100, 50, 200, 100, 50, 150, 50, 100, 200, 150, 50, 150, 100, 150, 150, 100, 50, 200, 100, 50, 150, 50, 100],
    'fuel':[25, 15, 20, 30, 10, 15, 20, 10, 5, 30, 10, 5, 25, 10, 5, 25, 15, 20, 30, 10, 15, 20, 10, 5, 30, 10, 5, 25, 10, 5],
    'number_of_sensors': [7, 6, 5, 12, 7, 10, 16, 7, 15, 10, 6, 8, 15, 11, 10, 7, 6, 5, 12, 7, 10, 16, 7, 15, 10, 6, 8, 15, 11, 10],
    'speed': [80, 75, 78, 90, 85, 82, 89, 72, 88, 92, 86, 80, 90, 82, 80, 80, 75, 78, 90, 85, 82, 89, 72, 88, 92, 86, 80, 90, 82, 80]
}

df = pd.DataFrame(data)

# Separate features and labels
features = df[['truck_height', 'truck_width', 'number_of_sensors', 'speed', 'distance_of_route','max_match_of_route', 'fuel']]
labels = df['truck_color']

# Split the data into training set and testing set
features_train, features_test, labels_train, labels_test = train_test_split(features, labels, test_size=0.2, random_state=42)

# Create the decision tree classifier
clf = DecisionTreeClassifier()

# Train the model on the training set
clf.fit(features_train, labels_train)

# Make predictions on the testing set
predictions = clf.predict(features_test)

# Calculate accuracy
accuracy = accuracy_score(labels_test, predictions)
print("Accuracy:", accuracy)

# Example new data for prediction
new_data = {
    'truck_color': ['Red', 'Green', 'Blue'],
    'truck_height': [10, 19, 20],
    'truck_width': [17, 18, 20],
    'distance_of_route':[200, 250, 260],
    'max_match_of_route':[200, 250, 250],
    'fuel':[25, 25, 25],
    'number_of_sensors': [22, 23, 24],
    'speed': [125, 135, 140]
}

new_df = pd.DataFrame(new_data)

# Make predictions for the new data
predictions = clf.predict(new_df[['truck_height', 'truck_width', 'number_of_sensors', 'speed', 'distance_of_route','max_match_of_route', 'fuel']])

# Find the truck with the highest characteristics and assign truck ID 1
predicted_df = new_df.copy()
predicted_df['truck_id'] = 0
max_characteristics = new_df[['truck_height', 'truck_width', 'number_of_sensors', 'speed', 'distance_of_route','max_match_of_route', 'fuel']].max(axis=1)
predicted_df.loc[max_characteristics.idxmax(), 'truck_id'] = 1

print(predicted_df[['truck_id', 'truck_color']])
